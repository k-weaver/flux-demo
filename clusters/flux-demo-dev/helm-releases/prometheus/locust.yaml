apiVersion: v1
kind: ConfigMap
metadata:
  name: locust-script
data:
  locustfile.py: |-
    from locust import HttpUser, task, between 

    class QuickstartUser(HttpUser): 
        wait_time = between(0.7, 1.3)
        host = "http://nginx-ingress-controller.kube-system.svc.cluster.local"

        @task 
        def hello_world(self): 
            self.client.get("/", headers={"Host": "podinfo.local"})
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust
spec:
  selector:
    matchLabels:
      app: locust
  template:
    metadata:
      labels:
        app: locust
    spec:
      containers:
        - name: locust
          image: locustio/locust
          ports:
            - containerPort: 8089
          volumeMounts:
            - mountPath: /home/locust
              name: locust-script
      volumes:
        - name: locust-script
          configMap:
            name: locust-script
---
apiVersion: v1
kind: Service
metadata:
  name: locust
spec:
  ports:
    - port: 8089
      targetPort: 8089
      nodePort: 30015
  selector:
    app: locust
  type: LoadBalancer
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: nginx-scale
  namespace: kube-system
  labels:
    app: nginx-ingress-controller
  annotations:
    # This annotation is required to enable the KEDA operator to scale the deployment
    keda.sh/trigger-name: nginx-scale
    # This annotation is required to enable the KEDA operator to scale the deployment
    keda.sh/scale-target: nginx-ingress-controller
    # This annotation is required to enable the KEDA operator to scale the deployment
    keda.sh/scale-target-namespace: kube-system
spec:
  scaleTargetRef:
    kind: Deployment
    name: nginx-ingress-controller
  minReplicaCount: 1
  maxReplicaCount: 20
  cooldownPeriod: 30
  pollingInterval: 15
  triggers:
    # Number of replicas = ceil(currentMetricValue / threshold)
    - type: prometheus
      metadata:
        serverAddress: http://prometheus-server.kube-system.svc.cluster.local
        metricName: nginx_ingress_nginx_connections_active
        query: |
          sum(nginx_ingress_nginx_connections_active)
        threshold: '2500'
---
## For metrics, the following should be run first:
# kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
# kubectl patch deployment metrics-server -n kube-system \
#   --type=json \
#   -p='[{"op":"add","path":"/spec/template/spec/containers/0/args/-","value":"--kubelet-insecure-tls"}]'
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-ingress-hpa
  namespace: kube-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-ingress-controller
  minReplicas: 1
  maxReplicas: 20
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
    scaleDown:
      stabilizationWindowSeconds: 60
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
