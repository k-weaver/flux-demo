apiVersion: v1
kind: ConfigMap
metadata:
  name: locust-script
data:
  locustfile.py: |-
    from locust import HttpUser, task, between 

    class QuickstartUser(HttpUser): 
        wait_time = between(0.7, 1.3)
        host = "http://nginx-ingress-controller.kube-system.svc.cluster.local"

        @task 
        def hello_world(self): 
            self.client.get("/", headers={"Host": "podinfo.local"})
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-master
  labels:
    name: locust-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust-master
  template:
    metadata:
      labels:
        app: locust-master
    spec:
      containers:
        - name: locust-master
          image: locustio/locust
          args:
            - --master
            - --host=http://nginx-ingress-controller.kube-system.svc.cluster.local
          ports:
            - name: loc-master-web
              containerPort: 8089
              protocol: TCP
            - name: loc-master-p1
              containerPort: 5557
              protocol: TCP
            - name: loc-master-p2
              containerPort: 5558
              protocol: TCP
          volumeMounts:
            - mountPath: /home/locust
              name: locust-script
      volumes:
        - name: locust-script
          configMap:
            name: locust-script
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-worker
  labels:
    name: locust-worker
spec:
  replicas: 4
  selector:
    matchLabels:
      app: locust-worker
  template:
    metadata:
      labels:
        app: locust-worker
    spec:
      containers:
        - name: locust-worker
          image: locustio/locust
          args:
            - --worker
            - --master-host=locust-master
          volumeMounts:
            - mountPath: /home/locust
              name: locust-script
      volumes:
        - name: locust-script
          configMap:
            name: locust-script
---
kind: Service
apiVersion: v1
metadata:
  name: locust-master
  labels:
    app: locust-master
spec:
  ports:
    - port: 5557
      targetPort: loc-master-p1
      protocol: TCP
      name: loc-master-p1
    - port: 5558
      targetPort: loc-master-p2
      protocol: TCP
      name: loc-master-p2
  selector:
    app: locust-master

---
kind: Service
apiVersion: v1
metadata:
  name: locust-master-ui
  labels:
    app: locust-master
spec:
  ports:
    - port: 8089
      targetPort: loc-master-web
      protocol: TCP
      name: loc-master-web
      nodePort: 30627
  selector:
    app: locust-master
  type: NodePort
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: nginx-scale
  namespace: kube-system
  labels:
    app: nginx-ingress-controller
  annotations:
    # This annotation is required to enable the KEDA operator to scale the deployment
    keda.sh/trigger-name: nginx-scale
    # This annotation is required to enable the KEDA operator to scale the deployment
    keda.sh/scale-target: nginx-ingress-controller
    # This annotation is required to enable the KEDA operator to scale the deployment
    keda.sh/scale-target-namespace: kube-system
spec:
  scaleTargetRef:
    kind: Deployment
    name: nginx-ingress-controller
  minReplicaCount: 1
  maxReplicaCount: 20
  cooldownPeriod: 30
  pollingInterval: 15
  triggers:
    # Number of replicas = ceil(currentMetricValue / threshold)
    - type: prometheus
      metadata:
        serverAddress: http://prometheus-server.kube-system.svc.cluster.local
        metricName: nginx_ingress_nginx_connections_active
        query: |
          sum(nginx_ingress_nginx_connections_active)
        threshold: '2500'
---
## For metrics, the following should be run first:
# kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
# kubectl patch deployment metrics-server -n kube-system \
#   --type=json \
#   -p='[{"op":"add","path":"/spec/template/spec/containers/0/args/-","value":"--kubelet-insecure-tls"}]'
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-ingress-hpa
  namespace: kube-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-ingress-controller
  minReplicas: 1
  maxReplicas: 20
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 180
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 75
    - type: Object
      object:
        describedObject:
          apiVersion: v1
          kind: Namespace
          name: kube-system
        metric:
          name: nginx_ingress_connections
        target:
          type: Value
          value: 2700
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: locust
# spec:
#   selector:
#     matchLabels:
#       app: locust
#   template:
#     metadata:
#       labels:
#         app: locust
#     spec:
#       containers:
#         - name: locust
#           image: locustio/locust
#           ports:
#             - containerPort: 8089
#           volumeMounts:
#             - mountPath: /home/locust
#               name: locust-script
#       volumes:
#         - name: locust-script
#           configMap:
#             name: locust-script
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: locust
# spec:
#   ports:
#     - port: 8089
#       targetPort: 8089
#       nodePort: 30015
#   selector:
#     app: locust
#   type: LoadBalancer
